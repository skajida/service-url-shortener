// Code generated by MockGen. DO NOT EDIT.
// Source: contract.go
//
// Generated by this command:
//
//	mockgen -source contract.go -destination mocks_test.go -package controller_test
//
// Package controller_test is a generated GoMock package.
package controller_test

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockurlShortener is a mock of urlShortener interface.
type MockurlShortener struct {
	ctrl     *gomock.Controller
	recorder *MockurlShortenerMockRecorder
}

// MockurlShortenerMockRecorder is the mock recorder for MockurlShortener.
type MockurlShortenerMockRecorder struct {
	mock *MockurlShortener
}

// NewMockurlShortener creates a new mock instance.
func NewMockurlShortener(ctrl *gomock.Controller) *MockurlShortener {
	mock := &MockurlShortener{ctrl: ctrl}
	mock.recorder = &MockurlShortenerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockurlShortener) EXPECT() *MockurlShortenerMockRecorder {
	return m.recorder
}

// Generate mocks base method.
func (m *MockurlShortener) Generate(ctx context.Context, originUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate", ctx, originUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Generate indicates an expected call of Generate.
func (mr *MockurlShortenerMockRecorder) Generate(ctx, originUrl any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockurlShortener)(nil).Generate), ctx, originUrl)
}

// LookUp mocks base method.
func (m *MockurlShortener) LookUp(ctx context.Context, shortUrl string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LookUp", ctx, shortUrl)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LookUp indicates an expected call of LookUp.
func (mr *MockurlShortenerMockRecorder) LookUp(ctx, shortUrl any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LookUp", reflect.TypeOf((*MockurlShortener)(nil).LookUp), ctx, shortUrl)
}
